generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum GameStatus {
  WAITING
  ACTIVE
  FINISHED
}

enum PlayerStatus {
  ALIVE
  DEAD
}

model Game {
  id                   String         @id @default(cuid())
  name                 String
  joinCode             String         @unique
  creatorId            String
  players              PlayerInGame[] @relation("GamePlayer")
  status               GameStatus     @default(WAITING)
  winnerId             String?        @unique
  winner               PlayerInGame?  @relation("GameWinner", fields: [winnerId], references: [id])
  redrawsAlwaysAllowed Boolean        @default(false)
  useCustomWords       Boolean        @default(false)
  customWordsList      String[]
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
}

model PlayerInGame {
  id         String         @id @default(cuid())
  userId     String
  name       String
  gameId     String
  game       Game           @relation("GamePlayer", fields: [gameId], references: [id])
  gameWinner Game?          @relation("GameWinner")
  status     PlayerStatus   @default(ALIVE)
  word       String?
  targetId   String?
  target     PlayerInGame?  @relation("PlayerTarget", fields: [targetId], references: [id])
  targetedBy PlayerInGame[] @relation("PlayerTarget")
  redraws    Int            @default(0)
  kills      Int            @default(0)
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt

  @@unique([userId, gameId])
}
